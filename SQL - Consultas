SELECT COUNT(NUMERO) AS Quantidade, TIPO
FROM QUARTO
GROUP BY TIPO;


SELECT *
FROM (SELECT c.NOME, h.DIA_CHECK_IN, h.NUMERO_QUARTO 
       FROM HOSPEDA h , CLIENTE c 
       WHERE c.CPF = h.CPF_CLIENTE) a
RIGHT JOIN (SELECT SUM(VALOR_TOTAL) AS TOTAL, DATA,NUMERO_QUARTO	
FROM (SELECT p.VALOR*v.QUANTIDADE AS VALOR_TOTAL,v.NUMERO_QUARTO, v.DATA          
        FROM PRODUTO p, VENDA v      
        WHERE p.ID= v.ID_PRODUTO) 
GROUP BY DATA,NUMERO_QUARTO) b
ON a.DIA_CHECK_IN = b.DATA
ORDER BY b.TOTAL ASC;


SELECT NOME 
FROM FUNCIONARIO 
WHERE CPF IN (SELECT CPF_FUNCIONARIO 
    FROM MANUTENCAO 
    GROUP BY CPF_FUNCIONARIO 
    HAVING COUNT(*) > 3) 
ORDER BY DATA_NASC;


SELECT NOME 
FROM CLIENTE
WHERE CPF IN(SELECT CPF_CLIENTE 
    FROM DEPENDENTE 
    WHERE CPF_CLIENTE IN (SELECT CPF_CLIENTE
        FROM TELEFONE 
        WHERE TELEFONE LIKE '(21)44%')
    GROUP BY CPF_CLIENTE
    HAVING COUNT(*) < 2);


SELECT c.NOME, c.CPF
FROM CLIENTE c, (SELECT CPF_CLIENTE, DIA_CHECK_IN
                FROM RESERVA
                WHERE DIA_CHECK_IN BETWEEN '01/01/2019' 
                AND '01/31/2019') r
WHERE r.CPF_CLIENTE = c.CPF;


SELECT DISTINCT c.NOME, c.CPF
FROM CLIENTE c ,(SELECT h.CPF_CLIENTE
FROM HOSPEDA h, QUARTO q
WHERE h.NUMERO_QUARTO = q.NUMERO AND  (q.TIPO = 'duplo twin' OR q.TIPO = 'triplo')) t                  
WHERE c.CPF = t.CPF_CLIENTE;


SELECT COUNT(NUMERO) AS Quantidade , VISTA , VALOR_DIARIA
FROM QUARTO
GROUP BY VISTA,VALOR_DIARIA
ORDER BY VALOR_DIARIA ASC;


CREATE VIEW CBARLAVANDERIA AS
SELECT c.NOME, c.CPF
FROM CLIENTE c,(SELECT DISTINCT h.CPF_CLIENTE
                FROM HOSPEDA h, (SELECT v.NUMERO_QUARTO , v.DATA 
                                 FROM VENDA v,PRODUTO p
                                WHERE v.ID_PRODUTO = p.ID
                     AND (p.TIPO = 'bar'   OR p.TIPO= 'lavanderia')) produto
                Where (produto.DATA BETWEEN h.DIA_CHECK_IN 
                     AND h.DIA_CHECK_OUT) AND 
                h.NUMERO_QUARTO = produto.NUMERO_QUARTO) t
WHERE t.CPF_CLIENTE = c.CPF;


CREATE VIEW DependenteJoao AS
SELECT *
FROM CLIENTE
WHERE CPF = (
       SELECT CPF_CLIENTE
       FROM DEPENDENTE
       WHERE NOME = 'João');


SELECT NOME
FROM FUNCIONARIO
WHERE FUNCAO = 'técnico'
ORDER BY DATA_NASC DESC, SALARIO DESC;


SELECT MIN(v.VALOR_TOTAL) AS VALOR
FROM (SELECT p.VALOR*v.QUANTIDADE AS VALOR_TOTAL,v.NUMERO_QUARTO, v.DATA          
        FROM PRODUTO p, Venda v      
        WHERE p.ID= v.ID_PRODUTO) v
WHERE v.DATA BETWEEN '01/01/2019' 
                AND '12/31/2019';


SELECT NOME
FROM FUNCIONARIO
WHERE CPF IN (SELECT CPF_FUNCIONARIO
    FROM MANUTENCAO
    GROUP BY CPF_FUNCIONARIO
    HAVING COUNT(*) > 1) AND FUNCAO = 'técnico' AND DATA_NASC LIKE '%1990';


ALTER TABLE QUARTO
ADD CONSTRAINT NUMERO CHECK ( REGEXP_LIKE ( NUMERO, '^\Y(A-Z)-\d{3}$'));


CREATE OR REPLACE TRIGGER valorProduto
BEFORE INSERT OR UPDATE OF VALOR ON PRODUTO
FOR EACH ROW
BEGIN
IF :NEW.VALOR > 2 THEN
RAISE_APPLICATION_ERROR(-20001,'O valor do produto deve ser menor ou igual a R$2.00');
END IF;
END;


CREATE OR REPLACE TRIGGER QUANTDEPENDENTE 
    BEFORE INSERT ON DEPENDENTE
    FOR EACH ROW 
    DECLARE
        cpf number;
    BEGIN
        SELECT COUNT(*) INTO cpf FROM DEPENDENTE
        WHERE :new.CPF_CLIENTE IN (SELECT CPF_CLIENTE
        FROM DEPENDENTE
        GROUP BY CPF_CLIENTE
        HAVING COUNT(*) > 4);    

        IF cpf > 0 THEN
            RAISE_APPLICATION_ERROR(-20001,'O cliente só pode ter no maximo 5 dependetes');
        END IF;

    END;

CREATE OR REPLACE FUNCTION calcAvaliacaoByPeriodo(dataInicial DATE, dataFinal DATE)
   RETURN NUMBER
   IS media NUMBER(10,2);
BEGIN 
      SELECT avg(NOTA) 
	INTO media 
	FROM AVALIACAO 
	WHERE DATA >= TO_DATE(dataInicial, 'yyyy-mm-dd')
	AND DATA <= TO_DATE(dataFinal,'yyyy-mm-dd');          
      RETURN media;     
END calcAvaliacaoByPeriodo;
SELECT calcAvaliacaoByPeriodo(DataInicial, DataFinal) FROM DUAL;


CREATE OR REPLACE FUNCTION calculaPagamentoFuncionarios
   RETURN NUMBER
   IS soma NUMBER(10,2);
BEGIN 
soma:= 0;
SELECT sum(SALARIO)
